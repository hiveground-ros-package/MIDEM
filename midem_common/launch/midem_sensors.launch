<launch>
  <arg name="use_top" default="true"/>
  <arg name="use_front" default="true"/>

  <node pkg="tf" type="static_transform_publisher" name="kinect_top_tf" args="0.457193063872
    0.638211158375 1.31218758894 0.708001238099 0.706158935197 -0.00335022547065 -0.00791082055707
    /world /kinect_top_rgb_optical_frame 100" />

  <node pkg="tf" type="static_transform_publisher" name="kinect_top_front_tf" args="-0.0880483013685
    -0.562642246961 0.163701135884 -0.0222102171279 -0.312266100839 -0.949715060437 0.00615568853821 
    /kinect_top_rgb_optical_frame /kinect_front_rgb_optical_frame 100" />
  
  <node pkg="tf" type="static_transform_publisher" name="top_rgb_depth"
        args="-0.025 0 0 0 0 0  /kinect_top_rgb_optical_frame /kinect_top_depth_optical_frame 100" />  

  <node pkg="tf" type="static_transform_publisher" name="front_rgb_depth"
        args="-0.025 0 0 0 0 0  /kinect_front_rgb_optical_frame /kinect_front_depth_optical_frame 100"/>
  
  <!-- PCL pipeline -->
  <node pkg="nodelet" type="nodelet" name="pcl_manager" args="manager" output="screen"/>

  <group if="$(arg use_top)">

    <include file="$(find openni_launch)/launch/openni.launch">
      <arg name="camera" value="kinect_top" />
      <arg name="device_id" value="A00363807157051A" />
      <arg name="depth_registration" value="true" />
      <arg name="publish_tf" value="false" />
    </include>

    <node name="image_top" pkg="image_view" type="image_view" output="screen">
      <remap from="image" to="/kinect_top/rgb/image_color" />
    </node>
    
    <!-- Run a VoxelGrid filter to clean NaNs and downsample the data -->
    <node pkg="nodelet" type="nodelet" name="voxel_grid_top" args="load pcl/VoxelGrid pcl_manager"
      output="screen">
      <remap from="~input" to="/kinect_top/depth_registered/points" />
      <remap from="~output" to="/kinect_top/voxel_grid_output" />
      <rosparam>
        filter_field_name: z  
        filter_limit_min: 0.0  
        filter_limit_max: 1.6  
        filter_limit_negative: False
        leaf_size: 0.01  
        output_frame: /world
      </rosparam>
    </node>   

    <!-- Run a passthrough filter to remove unwanted points -->
    <node pkg="nodelet" type="nodelet" name="passthrough_x" args="load pcl/PassThrough
      pcl_manager" output="screen">
      <remap from="~input" to="/kinect_top/voxel_grid_output" />
      <remap from="~output" to="/kinect_top/passthrough_output" />
      <rosparam>
        filter_field_name: x  
        filter_limit_min: -0.02  
        filter_limit_max: 0.76  
        filter_limit_negative: False
      </rosparam>
    </node>
  </group>

  <group if="$(arg use_front)">
    <include file="$(find openni_launch)/launch/openni.launch">
      <arg name="camera" value="kinect_front" />
      <arg name="device_id" value="A00366A10885046A" />
      <arg name="depth_registration" value="true" />
      <arg name="publish_tf" value="false" />
    </include>
    
    <!-- Run a VoxelGrid filter to clean NaNs and downsample the data -->
    <node pkg="nodelet" type="nodelet" name="voxel_grid_front" args="load pcl/VoxelGrid pcl_manager"
      output="screen">
      <remap from="~input" to="/kinect_front/depth_registered/points" />
      <remap from="~output" to="/kinect_front/voxel_grid_output" />
      <rosparam>
        filter_field_name: z  
        filter_limit_min: 0.0  
        filter_limit_max: 1.6  
        filter_limit_negative: False
        leaf_size: 0.01  
        output_frame: /world
      </rosparam>
    </node>
  </group>
</launch>

